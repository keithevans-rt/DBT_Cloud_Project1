
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'my_new_project'
version: '1.0.0'
config-version: 2

dbt-cloud:
    project-id: 369296

# This setting configures which "profile" dbt uses for this project.
profile: 'default'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In dbt, the default materialization for a model is a view. This means, when you run 
# dbt run or dbt build, all of your models will be built as a view in your data platform. 
# The configuration below will override this setting for models in the example folder to 
# instead be materialized as tables. Any models you add to the root of the models folder will 
# continue to be built as views. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

snapshots:
  Keith_Test_Project:
  +target_schema: 'SNAPSHOTS'
  +target_database: "KEVANS_DBT_CLOUD{% if target.name in ('production', 'prod') %}_prod{% endif %}"   # Specify the default database for snapshots

# Configuration setting for all models in project
models:
  Keith_Test_Project:
    +transient: false
    staging:
      +schema: stage
      +materialized: view
    landing:
      +schema: stage
      +materialized: view
    marts:
      +materialized: table
      +schema: prod
      +snowflake_warehouse: "bi_dbt_{% if target.name in ('production', 'prod') %}prod{% else %}dev{% endif %}_xl_wh"
      +docs:
        node_color: "black"

vars:
  # The `high date` variable will be accessible in all resources
  high_date: '8888-12-31'
